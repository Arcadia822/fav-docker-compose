version: '3.8'
services:

  # --- MySQL -----------------------------------------------------------------

  mysqld:
    container_name: mysqld
    image: mysql:5.7
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - TZ=Asia/Shanghai
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d

  # --- Nacos -----------------------------------------------------------------

  nacos:
    image: nacos/nacos-server
    container_name: nacos
    restart: always
    depends_on:
      - mysqld
    ports:
      - ${NACOS_PORT}:8848
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=nacos_devtest
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=nacos
      - MYSQL_SERVICE_PASSWORD=nacos
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      - NACOS_AUTH_IDENTITY_KEY=2222
      - NACOS_AUTH_IDENTITY_VALUE=2xxx
      - NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789

  # --- XxlJob ----------------------------------------------------------------

  xxljob:
    container_name: xxljob
    image: xuxueli/xxl-job-admin:2.3.0
    restart: always
    depends_on:
      - mysqld
    ports:
      - ${XXLJOB_PORT}:8080
    environment:
      PARAMS: '--spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job?Unicode=true&characterEncoding=UTF-8 --spring.datasource.username=mysql'

  # --- REDIS -----------------------------------------------------------------

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    command: redis-server /etc/redis/redis.conf --appendonly yes
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:6379

  # --- Zookeeper--------------------------------------------------------------

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    volumes:
      - ./zookeeper/data:/data

  # --- Kafka -----------------------------------------------------------------

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    ports:
      - ${KAFKA_PORT}:9092
    volumes:
      - ./kafka/data:/kafka
    depends_on:
      - zookeeper
